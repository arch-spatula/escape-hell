[
  [
    {
      "id": 1,
      "content": "HTML이 무엇인지, 어떤 역할을 하는지 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "CSS의 블록 속성과 인라인 속성을 구분할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "JS가 무엇인지, 어떤 역할을 하는지 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "React의 장점에 대해 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "UI 라이브러리를 사용하는 이유를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "프레임워크와 라이브러리의 개념을 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "주요 네이티브 Hook을 활용할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "리액트의 랜더링 동작 원리와 코드 실행 순서를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "MVC 패턴에서 모델(Model)과 뷰(View)가 무엇과 대응되는지 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "CSS framework와 CSS library의 사용 이유를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "CSS framework와 CSS library의 장점과 단점을 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "CSS-in-JS 패러다임을 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "상태 관리 라이브러리의 필요성을 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "클라이언트 상태와 서버 상태의 차이를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "전역 상태와 지역 상태의 차이를 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "SPA의 개념을 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "useNavigate에 대해 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "useParams에 대해 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 4,
      "content": "dynamic route에 대해 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "JavaScript의 문제점과 이를 TypeScript가 어떻게 보완하는지 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "정적 언어와 동적 언어가 무엇인지 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "제네릭을 정의하고 또 소비할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 4,
      "content": "타입과 인터페이스의 차이에 대해 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "SEO와 SSR의 개념을 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "Next.js를 사용하는 이유를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "API를 설계하고 통신할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "코드 테스팅이 필요한 이유를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "TDD가 중요한 이유를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "각 테스트의 종류와 기능을 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "SQL과 NoSQL의 차이와 용도를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "쿼리문을 작성할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "데이터 베이스 설계 구조와 개념을 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "serverless의 장점과 단점을 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "BaaS 특징을 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "용도에 맞는 cloud service를 선택해서 이용할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "모듈 번들러를 사용하는 이유를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 2,
      "content": "모듈 번들러의 작동 원리를 설명할 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "모듈 종속성, 엔트리, 아웃풋, 로더를 설명할 수 있습니다.",
      "isDone": false
    }
  ],
  [
    {
      "id": 1,
      "content": "git을 사용하는 이유를  설명할 수 있어야 하고, 깃의 사용법을 알 수 있습니다",
      "isDone": false
    },
    {
      "id": 2,
      "content": "github을 이용하여 이슈를 만들고 코드를 합치고 코드 리뷰를 남길 수 있습니다.",
      "isDone": false
    },
    {
      "id": 3,
      "content": "git-flow와 trunk-based의 협업 방식을 설명할 수 있습니다.",
      "isDone": false
    }
  ]
]
